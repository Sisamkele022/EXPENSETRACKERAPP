{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CAPACITI-JHB\\\\Pictures\\\\EXPENSETRACKERAPP\\\\src\\\\pages\\\\AddExpense.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddExpense = () => {\n  _s();\n  const [expense, setExpense] = useState({\n    name: '',\n    amount: 0\n  });\n  const navigate = useNavigate(); // Ensure this hook is used correctly\n\n  const addExpense = expense => {\n    // Assuming you have an expenses array in your state\n    // Make sure your expenses state is defined and accessible\n    // e.g., const [expenses, setExpenses] = useState([]);\n\n    // If you're pushing to an array\n    setExpenses(prevExpenses => [...prevExpenses, expense]);\n\n    // Navigate after adding expense\n    navigate('/expenses'); // Use navigate to change the route\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    addExpense(expense); // Call addExpense with the current expense state\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Expense Name\",\n      value: expense.name,\n      onChange: e => setExpense({\n        ...expense,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: expense.amount,\n      onChange: e => setExpense({\n        ...expense,\n        amount: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(AddExpense, \"bOnlMdh9iywdLq0AYkbceMAu/ww=\", false, function () {\n  return [useNavigate];\n});\n_c = AddExpense;\nexport default AddExpense;\nvar _c;\n$RefreshReg$(_c, \"AddExpense\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AddExpense","_s","expense","setExpense","name","amount","navigate","addExpense","setExpenses","prevExpenses","handleSubmit","event","preventDefault","onSubmit","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CAPACITI-JHB/Pictures/EXPENSETRACKERAPP/src/pages/AddExpense.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AddExpense = () => {\r\n    const [expense, setExpense] = useState({ name: '', amount: 0 });\r\n    const navigate = useNavigate(); // Ensure this hook is used correctly\r\n\r\n    const addExpense = (expense) => {\r\n        // Assuming you have an expenses array in your state\r\n        // Make sure your expenses state is defined and accessible\r\n        // e.g., const [expenses, setExpenses] = useState([]);\r\n        \r\n        // If you're pushing to an array\r\n        setExpenses(prevExpenses => [...prevExpenses, expense]);\r\n\r\n        // Navigate after adding expense\r\n        navigate('/expenses'); // Use navigate to change the route\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        addExpense(expense); // Call addExpense with the current expense state\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Expense Name\"\r\n                value={expense.name}\r\n                onChange={(e) => setExpense({ ...expense, name: e.target.value })}\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Amount\"\r\n                value={expense.amount}\r\n                onChange={(e) => setExpense({ ...expense, amount: e.target.value })}\r\n            />\r\n            <button type=\"submit\">Add Expense</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddExpense;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAC/D,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMU,UAAU,GAAIL,OAAO,IAAK;IAC5B;IACA;IACA;;IAEA;IACAM,WAAW,CAACC,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEP,OAAO,CAAC,CAAC;;IAEvD;IACAI,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBL,UAAU,CAACL,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACIH,OAAA;IAAMc,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBACzBf,OAAA;MACIgB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEf,OAAO,CAACE,IAAK;MACpBc,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEE,IAAI,EAAEe,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACFzB,OAAA;MACIgB,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAEf,OAAO,CAACG,MAAO;MACtBa,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEG,MAAM,EAAEc,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACFzB,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf,CAAC;AAACvB,EAAA,CAtCID,UAAU;EAAA,QAEKH,WAAW;AAAA;AAAA4B,EAAA,GAF1BzB,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}